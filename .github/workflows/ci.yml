name: Continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  BINDGEN_EXTRA_CLANG_ARGS: "-I/usr/include/scotch" # ubuntu package use <scotch/scotch.h>

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - run: sudo apt-get -y install libclang-dev libmetis-dev libscotch-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --all-targets --locked

  test:
    name: Test Suite
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - run: sudo apt-get -y install libclang-dev libmetis-dev libscotch-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build tests and benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --no-run --locked
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --locked

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt-get -y install libclang-dev libmetis-dev libscotch-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: >
            --all --all-targets --locked --
            -D warnings
            -D clippy::cargo_common_metadata
            -D clippy::negative_feature_names
            -D clippy::redundant_feature_names
