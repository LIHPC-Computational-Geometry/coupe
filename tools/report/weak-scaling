#!/bin/sh
#
# Usage example:
#
#     echo "1 2 $(seq 4 4 63) $(seq 64 8 127) $(seq 128 16 256)" |
#         ./tools/report/weak-scaling monkey.meshb spike,1000 -a random,2 -a fm,0.04

set -e

. "$(dirname "$0")"/common.sh
cargo build -p coupe-tools --bins --release
PATH="$TARGET_DIR/release:$PATH"

MESH_FILE=$1
shift

WEIGHT_DIST=$1
shift

tmp_mesh=$(echo 'maketemp(/dev/shm/weak-scaling.XXXXXX)' | m4)
tmp_weights="$tmp_mesh".weights
trap 'rm -f $tmp_mesh $tmp_weights' 0 2 3 15

bench_name=$(basename "$tmp_mesh" | tr '.' ';')
for arg
do
	if [ "$arg" != "${arg#-}" ]
	then continue
	fi
	bench_name="$bench_name;$arg"
done

mesh_dup() {
	n=$1

	say mesh-dup "$MESH_FILE ($n times)"
	rm "$tmp_mesh"
	mesh-dup -n "$n" <"$MESH_FILE" >"$tmp_mesh"
}

weight_gen() {
	say weight-gen "$tmp_weights"
	weight-gen --distribution "$WEIGHT_DIST" <"$tmp_mesh" >"$tmp_weights"
}

part_bench() {
	thread_count=$1
	shift

	say part-bench "$thread_count threads"
	part-bench --mesh "$tmp_mesh" \
	           --weights "$tmp_weights" \
	           --sample-size 10 \
	           --edge-weights linear \
	           --efficiency="$thread_count" \
	           "$@"
}

[ -t 0 ] && echo "Reading thread counts from stdin..." 2>&1
awk '{ for (i = 1; i <= NF; i++) { print $i } }' | while read -r thread_count
do
	mesh_dup "$thread_count"
	weight_gen

	say sleep "Cooling CPUs down for 4s..."
	sleep 4

	part_bench "$thread_count" "$@"
done
