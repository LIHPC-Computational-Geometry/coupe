#!/bin/sh
set -e

. "$(dirname "$0")"/common.sh

command -v gnuplot >/dev/null || {
	echo "command 'gnuplot' not found" >&2
	exit 1
}

[ $# -lt 2 ] && {
	echo "usage: $0 BASELINE BENCHMARK_GROUPS..." >&2
	exit 1
}

BASELINE=$1
shift

TARGET_DIR=$(cargo metadata --format-version=1 | jq -r '.target_directory')
csv="$BASELINE.strong.csv"
svg="$BASELINE.strong.svg"

bg_path() {
	benchmark_group=$1

	benchmark_dir=$(echo "$benchmark_group" | tr ':' '_' | cut -b-64)
	echo "$TARGET_DIR/criterion/$benchmark_dir"
}

time_ns() {
	benchmark_group=$1
	threads=$2

	path="$(bg_path "$benchmark_group")/threads=$threads/$BASELINE/estimates.json"
	if [ -f "$path" ]
	then jq -r '.mean.point_estimate' <"$path"
	else return 1
	fi
}

stddev_ns() {
	threads=$1

	path="$(bg_path "$benchmark_group")/threads=$threads/$BASELINE/estimates.json"
	if [ -f "$path" ]
	then jq -r '.mean.standard_error' <"$path"
	else return 1
	fi
}

sayfile Aggregating "$csv"

thread_counts=$(
for benchmark_group in "$@"
do
	for bench in "$(bg_path "$benchmark_group")/threads="*
	do
		thread_count=$(echo "$bench" | sed 's/.*threads=\(.*\)/\1/')
		echo "$thread_count"
	done
done | sort -n | uniq
)

(
	printf "thread count"
	for benchmark_group in "$@"
	do
		group=$(echo "$benchmark_group" | tr ';' '_')
		printf " ; %s" "$group"
	done
	printf "\n"
) >"$csv"

echo "$thread_counts" | while read -r thread_count
do
	printf "%d" "$thread_count"
	for benchmark_group in "$@"
	do
		if t=$(time_ns "$benchmark_group" "$thread_count")
		then
			t_seq=$(time_ns "$benchmark_group" 1)
			speedup=$(echo "$t_seq / $t" | bc -l)
			printf " ; %f" "$speedup"
		else
			printf " ;"
		fi
	done
	printf "\n"
done >>"$csv"

max_thread_count=$(echo "$thread_counts" | tail -n1)
plot_cmds=$(awk -v csv="$csv" "BEGIN{
	for (i=1; i<ARGC; i++) {
		gsub(/\_/, \"\\\\_\", ARGV[i])
		printf \",'%s' using 1:%d title '%s' with linespoints\",csv,i+1,ARGV[i]
	}
}" $@)

gnuplot <<EOF
	set output '$svg'
	set datafile separator ';'
	set term svg size 1366,768

	set title 'Strong scaling'
	set xlabel 'Number of threads'
	set ylabel 'Speedup'
	set xrange [1:$max_thread_count]
	set logscale x 2
	set logscale y 2
	set grid ytics
	plot x title 'Ideal' dashtype 2 $plot_cmds
EOF

say Rendered "$svg"
