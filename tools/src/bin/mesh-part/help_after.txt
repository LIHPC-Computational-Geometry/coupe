ALGORITHMS

    The option "-a, --algorithm" defines the algorithm used to partition the
    input mesh.  It can be specified multiple times to chain algorithms.

    If a partition improving algorithm is in the begining of the chain, it will
    be fed a default partition where all weights are in the same part.

    When an algorithm is avaiable on multiple partitioners, add ":partitioner"
    to choose between implementations (e.g. rcb:zoltan).

    Miscellaneous partitioning algorithms:

        random,PART_COUNT,[SEED=0]
            Creates a random partition

    Number partitioning algorithms:
    These algorithms create partitions by only taking weights into account.

        greedy,PART_COUNT
            Greedy number partitioning algorithm

        kk,PART_COUNT
            Karmarkar-Karp, Least Difference Method

        ckk,TOLERANCE
            Complete Karmarkar-Karp

    Number partition improving algorithms:
    These algorithms improve partitions by only taking weights into account.

        vn-best,PART_COUNT
            Steepest descent Vector of Numbers algorithm

        vn-first,PART_COUNT
            Descent Vector of Numbers algorithm

    Geometric partitioning algorithms:
    These algorithms create partitions using cell coordinates.

        rcb,PART_COUNT
            Recursive Coordinate Biscection

        hilbert,PART_COUNT,[ORDER=12]
            Hilbert Curve

    Graph partition improving algorithms:
    These algorithms improve partitions using the topology of the mesh.

        fm,[args...]
            Fidducia-Mattheyses algorithm
            Arguments (in this order):
            - MAX_IMBALANCE (default: initial imbalance)
            - MAX_BAD_MOVES_IN_A_ROW (default: 0)
            - MAX_PASSES (default: 0, i.e. UINTPTR_MAX)
            - MAX_FLIPS_PER_PASS (default: 0, i.e. UINTPTR_MAX)

        kl,[MAX_BAD_MOVES_IN_A_ROW=1]
            Kernighan-Lin algorithm
